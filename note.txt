problems\op\op_ortools.py: euclidean distance computed
problems\op\op_gurobi.py: solve euclidean distance constraint optimization


training data: len(data) = epoch size?? default = 1 280 000
training data is self-generating: need to change this to into input data

training data is first wrap up (and evaluated) then unwrap for training


code changed:
    TSP problem file:
        * pre defined dataset
        * add cost data into init
        * suffle data if needed
        * change get_costs static function: add optional cost_data parameters and change cost return

    get_options.py file:
        * add train_dataset argument
        * change default val_size
    
    attention_model.py:
        * change forwards function: add optional cost_data parameters
        * change sample_many function

    train.py file:
        * change rollout function: add optional cost_data param, return pi if needed
        * validate function: return pi if needed
        * add shift_row func: reordering sequence to put the depot into 1st place
        * return train and bl cost

    eval.py function:
        * change _eval_dataset function
    
    reinfore_baselines.py:
        * change Rollout init, _update_model, epoch_callback where the new baseline is generated
        * return cost in epoch_callback
        * shuffle baseline instead of generating new data for baseline

    utils:
        * add plot.py file: plotting training and bl cost

    *** proposal about navigation: _inner function in attention_model


For open TSP: the cost returned to the depot should be set to 0 (set cost[:,0] = 0)



Run the model: (make sure that the corresponding cost matrix is named by, eg: data/tsp/train_cost.pkl)
    input: 20. Change graph_size for running different TSP size

## eval model only
python run.py --graph_size 100 --baseline rollout --run_name tsp100_rollout 
--train_dataset data/tsp/train_location.pkl 
--val_dataset data/tsp/val_location.pkl 
--eval_dataset data/tsp/eval_location.pkl 
--n_epochs 100
--resume outputs/tsp_100/tsp100_rollout_20240525_cost_100epochs/epoch-99.pt  ###put here the pre-trained model path 
--eval_only
--cost_input yes

## train model and use cost input
python run.py --graph_size 100 --baseline rollout --run_name tsp100_rollout 
--train_dataset data/tsp/train_location.pkl 
--val_dataset data/tsp/val_location.pkl 
--eval_dataset data/tsp/eval_location.pkl 
--n_epochs 100
--cost_input true



use training data with only 2 routes